<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.TDegreeMapper">
    <resultMap id="BaseResultMap" type="model.TDegree">
        <id column="degreeid" jdbcType="INTEGER" property="degreeid"/>
        <result column="degreename" jdbcType="VARCHAR" property="degreename"/>
        <result column="degreedesc" jdbcType="VARCHAR" property="degreedesc"/>
        <result column="requirement_id" jdbcType="INTEGER" property="requirementId"/>
    </resultMap>
    <sql id="Base_Column_List">
        degreeid
        , degreename, degreedesc, requirement_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_degree
        where degreeid = #{degreeid,jdbcType=INTEGER}
    </select>
    <select id="selectBySelective" parameterType="model.TDegree" resultType="model.TDegree">

        select
        <include refid="Base_Column_List"/>
        from     t_degree
        <where>
            <trim prefixOverrides="and">
                <if test="  degreeid !=null and degreeid !=0">
                    and degreeid = #{degreeid}
                </if>
                <if test=" degreename !=null and degreename !=''">
                    and degreename like '%${degreename}'
                </if>
                <if test="degreedesc!=null and degreedesc !=''">
                    and degreedesc like '%${degreedesc}'
                </if>
                <if test=" requirement_id !=null and requirement_id!=0">
                    and requirement_id = #{requirement_id}
                </if>
            </trim>
        </where>
    </select>

    <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select *
        from t_degree
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_degree
        where degreeid = #{degreeid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.TDegree">
        insert into t_degree (degreeid, degreename, degreedesc,
                              requirement_id)
        values (#{degreeid,jdbcType=INTEGER}, #{degreename,jdbcType=VARCHAR}, #{degreedesc,jdbcType=VARCHAR},
                #{requirementId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.TDegree">
        insert into t_degree
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="degreeid != null">
                degreeid,
            </if>
            <if test="degreename != null">
                degreename,
            </if>
            <if test="degreedesc != null">
                degreedesc,
            </if>
            <if test="requirementId != null">
                requirement_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="degreeid != null">
                #{degreeid,jdbcType=INTEGER},
            </if>
            <if test="degreename != null">
                #{degreename,jdbcType=VARCHAR},
            </if>
            <if test="degreedesc != null">
                #{degreedesc,jdbcType=VARCHAR},
            </if>
            <if test="requirementId != null">
                #{requirementId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.TDegree">
        update t_degree
        <set>
            <if test="degreename != null">
                degreename = #{degreename,jdbcType=VARCHAR},
            </if>
            <if test="degreedesc != null">
                degreedesc = #{degreedesc,jdbcType=VARCHAR},
            </if>
            <if test="requirementId != null">
                requirement_id = #{requirementId,jdbcType=INTEGER},
            </if>
        </set>
        where degreeid = #{degreeid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.TDegree">
        update t_degree
        set degreename     = #{degreename,jdbcType=VARCHAR},
            degreedesc     = #{degreedesc,jdbcType=VARCHAR},
            requirement_id = #{requirementId,jdbcType=INTEGER}
        where degreeid = #{degreeid,jdbcType=INTEGER}
    </update>
</mapper>