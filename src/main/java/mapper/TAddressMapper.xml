<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.TAddressMapper">
  <resultMap id="BaseResultMap" type="model.TAddress">
    <id column="addressid" jdbcType="INTEGER" property="addressid" />
    <result column="street" jdbcType="VARCHAR" property="street" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="zipcode" jdbcType="VARCHAR" property="zipcode" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Base_Column_List">
    addressid, street, city, country, zipcode, mobile, type, comment, userid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_address
    where addressid = #{addressid,jdbcType=INTEGER}
  </select>

  <select id="selectBySelective" parameterType="model.TAddress" resultType="model.TAddress">

    select
    <include refid="Base_Column_List"/>
    from   t_address
    <where>
      <trim prefixOverrides="and">
        <if test=" addressid !=null and addressid  !=''">
          and addressid  = #{addressid}
        </if>
        <if test=" street !=null and street!=''">
          and street like '%${street}'
        </if>
        <if test="city !=null and city !=''">
          and city like '%${city}'
        </if>
        <if test="  country!=null and country!=''">
          and country like '%${country}'
        </if>
        <if test="  zipcode!=null and zipcode!=''">
          and zipcode like '%${zipcode}'
        </if>
        <if test="mobile !=null and mobile !=''">
          and mobile like '%${mobile}'
        </if>
        <if test=" type !=null and type!=''">
          and type like '%${type}'
        </if>
        <if test="  comment!=null and comment!=''">
          and comment like '%${comment}'
        </if>
        <if test="  userid!=null and userid !=0">
          and userid = #{userid}
        </if>

      </trim>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_address
    where addressid = #{addressid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.TAddress">
    insert into t_address (addressid, street, city, 
      country, zipcode, mobile, 
      type, comment, userid
      )
    values (#{addressid,jdbcType=INTEGER}, #{street,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{zipcode,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.TAddress">
    insert into t_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        addressid,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="zipcode != null">
        zipcode,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.TAddress">
    update t_address
    <set>
      <if test="street != null">
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        zipcode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where addressid = #{addressid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.TAddress">
    update t_address
    set street = #{street,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER}
    where addressid = #{addressid,jdbcType=INTEGER}
  </update>
</mapper>