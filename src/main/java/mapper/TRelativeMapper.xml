<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.TRelativeMapper">
    <resultMap id="BaseResultMap" type="model.TRelative">
        <id column="relativeid" jdbcType="INTEGER" property="relativeid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="relationship" jdbcType="VARCHAR" property="relationship"/>
        <result column="workplace" jdbcType="VARCHAR" property="workplace"/>
        <result column="nationality" jdbcType="INTEGER" property="nationality"/>
        <result column="occupation" jdbcType="VARCHAR" property="occupation"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="relativetype" jdbcType="VARCHAR" property="relativetype"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
    </resultMap>
    <sql id="Base_Column_List">
        relativeid
        , name, relationship, workplace, nationality, occupation, mobile,address, email,
    relativetype, userid
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_relative
        where relativeid = #{relativeid,jdbcType=INTEGER}
    </select>
    <select id="selectBySelective" parameterType="model.TRelative" resultType="model.TRelative">

        select
        <include refid="Base_Column_List"/>
        from t_relative
        <where>
            <trim prefixOverrides="and">
                <if test=" relativeid  !=null and relativeid !=0">
                    and relativeid = #{relativeid}
                </if>
                <if test="name!=null and name!=''">
                    and name like '$%{name}%'
                </if>
                <if test=" relationship!=null and relationship!= ''">
                    and relationship like '$%{relationship}%'
                </if>
                <if test=" workplace!=null and workplace!= ''">
                    and workplace like '$%{workplace}%'
                </if>
                <if test="nationality !=null and nationality!=0">
                    and nationality = #{nationality}
                </if>
                <if test=" occupation!=null and occupation!= ''">
                    and occupation like '$%{occupation}%'
                </if>
                <if test=" address!=null and address!= ''">
                    and address like '$%{address}%'
                </if>
                <if test="mobile !=null and mobile!= ''">
                    and mobile like '$%{mobile}%'
                </if>
                <if test=" email !=null and email!=0">
                    and email = #{email}
                </if>
                <if test="relativetype !=null and relativetype!= ''">
                    and relativetype like '$%{relativetype}%'
                </if>
                <if test=" userid !=null and userid!= 0">
                    and userid = #{userid}
                </if>
            </trim>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_relative
        where relativeid = #{relativeid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.TRelative">
        insert into t_relative (relativeid, name, relationship,
                                workplace, nationality, occupation,
                                mobile, email, relativetype,address,
                                userid)
        values (#{relativeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{relationship,jdbcType=VARCHAR},
                #{workplace,jdbcType=VARCHAR}, #{nationality,jdbcType=INTEGER}, #{occupation,jdbcType=VARCHAR},
                #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{relativetype,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR},
                #{userid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.TRelative">
        insert into t_relative
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="relativeid != null">
                relativeid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="relationship != null">
                relationship,
            </if>
            <if test="workplace != null">
                workplace,
            </if>
            <if test="nationality != null">
                nationality,
            </if>
            <if test="occupation != null">
                occupation,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="relativetype != null">
                type,
            </if>
            <if test="userid != null">
                userid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="relativeid != null">
                #{relativeid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="relationship != null">
                #{relationship,jdbcType=VARCHAR},
            </if>
            <if test="workplace != null">
                #{workplace,jdbcType=VARCHAR},
            </if>
            <if test="nationality != null">
                #{nationality,jdbcType=INTEGER},
            </if>
            <if test="occupation != null">
                #{occupation,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="relativetype != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.TRelative">
        update t_relative
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="relationship != null">
                relationship = #{relationship,jdbcType=VARCHAR},
            </if>
            <if test="workplace != null">
                workplace = #{workplace,jdbcType=VARCHAR},
            </if>
            <if test="nationality != null">
                nationality = #{nationality,jdbcType=INTEGER},
            </if>
            <if test="occupation != null">
                occupation = #{occupation,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="relativetype != null">
                relativetype = #{relativetype,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
        </set>
        where relativeid = #{relativeid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.TRelative">
        update t_relative
        set name         = #{name,jdbcType=VARCHAR},
            relationship = #{relationship,jdbcType=VARCHAR},
            workplace    = #{workplace,jdbcType=VARCHAR},
            nationality  = #{nationality,jdbcType=INTEGER},
            occupation   = #{occupation,jdbcType=VARCHAR},
            mobile       = #{mobile,jdbcType=VARCHAR},
            address      = #{address,jdbcType=VARCHAR},
            email        = #{email,jdbcType=VARCHAR},
            relativetype = #{relativetype,jdbcType=VARCHAR},
            userid       = #{userid,jdbcType=INTEGER}
        where relativeid = #{relativeid,jdbcType=INTEGER}
    </update>
</mapper>